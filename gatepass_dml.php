<?php

// Data functions (insert, update, delete, form) for table gatepass

// This script and data application were generated by AppGini 5.70
// Download AppGini for free from https://bigprof.com/appgini/download/

function gatepass_insert(){
	global $Translation;

	// mm: can member insert record?
	$arrPerm=getTablePermissions('gatepass');
	if(!$arrPerm[1]){
		return false;
	}

	$data['entry_time'] = makeSafe($_REQUEST['entry_time']);
		if($data['entry_time'] == empty_lookup_value){ $data['entry_time'] = ''; }
	$data['entry_time'] = time24($data['entry_time']);
	$data['exit_time'] = makeSafe($_REQUEST['exit_time']);
		if($data['exit_time'] == empty_lookup_value){ $data['exit_time'] = ''; }
	$data['exit_time'] = time24($data['exit_time']);
	$data['gate'] = makeSafe($_REQUEST['gate']);
		if($data['gate'] == empty_lookup_value){ $data['gate'] = ''; }
	$data['purpose_of_visit'] = br2nl(makeSafe($_REQUEST['purpose_of_visit']));
	$data['invited_by'] = makeSafe($_REQUEST['invited_by']);
		if($data['invited_by'] == empty_lookup_value){ $data['invited_by'] = ''; }
	$data['staff'] = makeSafe($_REQUEST['staff']);
		if($data['staff'] == empty_lookup_value){ $data['staff'] = ''; }
	$data['individual'] = makeSafe($_REQUEST['individual']);
		if($data['individual'] == empty_lookup_value){ $data['individual'] = ''; }
	$data['group'] = makeSafe($_REQUEST['group']);
		if($data['group'] == empty_lookup_value){ $data['group'] = ''; }
	$data['vehicle'] = makeSafe($_REQUEST['vehicle']);
		if($data['vehicle'] == empty_lookup_value){ $data['vehicle'] = ''; }
	$data['luggage'] = makeSafe($_REQUEST['luggage']);
		if($data['luggage'] == empty_lookup_value){ $data['luggage'] = ''; }
	$data['date'] = intval($_REQUEST['dateYear']) . '-' . intval($_REQUEST['dateMonth']) . '-' . intval($_REQUEST['dateDay']);
	$data['date'] = parseMySQLDate($data['date'], '1');
	$data['status'] = makeSafe($_REQUEST['status']);
		if($data['status'] == empty_lookup_value){ $data['status'] = ''; }
	$data['reason'] = br2nl(makeSafe($_REQUEST['reason']));
	if($data['gate']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'gate': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	if($data['purpose_of_visit']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Purpose_Of_Visit': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}

	// hook: gatepass_before_insert
	if(function_exists('gatepass_before_insert')){
		$args=array();
		if(!gatepass_before_insert($data, getMemberInfo(), $args)){ return false; }
	}

	$o = array('silentErrors' => true);
	sql('insert into `gatepass` set       `entry_time`=' . (($data['entry_time'] !== '' && $data['entry_time'] !== NULL) ? "'{$data['entry_time']}'" : 'NULL') . ', `exit_time`=' . (($data['exit_time'] !== '' && $data['exit_time'] !== NULL) ? "'{$data['exit_time']}'" : 'NULL') . ', `gate`=' . (($data['gate'] !== '' && $data['gate'] !== NULL) ? "'{$data['gate']}'" : 'NULL') . ', `purpose_of_visit`=' . (($data['purpose_of_visit'] !== '' && $data['purpose_of_visit'] !== NULL) ? "'{$data['purpose_of_visit']}'" : 'NULL') . ', `invited_by`=' . (($data['invited_by'] !== '' && $data['invited_by'] !== NULL) ? "'{$data['invited_by']}'" : 'NULL') . ', `staff`=' . (($data['staff'] !== '' && $data['staff'] !== NULL) ? "'{$data['staff']}'" : 'NULL') . ', `individual`=' . (($data['individual'] !== '' && $data['individual'] !== NULL) ? "'{$data['individual']}'" : 'NULL') . ', `group`=' . (($data['group'] !== '' && $data['group'] !== NULL) ? "'{$data['group']}'" : 'NULL') . ', `vehicle`=' . (($data['vehicle'] !== '' && $data['vehicle'] !== NULL) ? "'{$data['vehicle']}'" : 'NULL') . ', `luggage`=' . (($data['luggage'] !== '' && $data['luggage'] !== NULL) ? "'{$data['luggage']}'" : 'NULL') . ', `date`=' . (($data['date'] !== '' && $data['date'] !== NULL) ? "'{$data['date']}'" : 'NULL') . ', `status`=' . (($data['status'] !== '' && $data['status'] !== NULL) ? "'{$data['status']}'" : 'NULL') . ', `reason`=' . (($data['reason'] !== '' && $data['reason'] !== NULL) ? "'{$data['reason']}'" : 'NULL'), $o);
	if($o['error']!=''){
		echo $o['error'];
		echo "<a href=\"gatepass_view.php?addNew_x=1\">{$Translation['< back']}</a>";
		exit;
	}

	$recID = db_insert_id(db_link());

	// hook: gatepass_after_insert
	if(function_exists('gatepass_after_insert')){
		$res = sql("select * from `gatepass` where `id`='" . makeSafe($recID, false) . "' limit 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=array();
		if(!gatepass_after_insert($data, getMemberInfo(), $args)){ return $recID; }
	}

	// mm: save ownership data
	set_record_owner('gatepass', $recID, getLoggedMemberID());

	return $recID;
}

function gatepass_delete($selected_id, $AllowDeleteOfParents=false, $skipChecks=false){
	// insure referential integrity ...
	global $Translation;
	$selected_id=makeSafe($selected_id);

	// mm: can member delete record?
	$arrPerm=getTablePermissions('gatepass');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='gatepass' and pkValue='$selected_id'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='gatepass' and pkValue='$selected_id'");
	if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
		// delete allowed, so continue ...
	}else{
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: gatepass_before_delete
	if(function_exists('gatepass_before_delete')){
		$args=array();
		if(!gatepass_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'];
	}

	sql("delete from `gatepass` where `id`='$selected_id'", $eo);

	// hook: gatepass_after_delete
	if(function_exists('gatepass_after_delete')){
		$args=array();
		gatepass_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("delete from membership_userrecords where tableName='gatepass' and pkValue='$selected_id'", $eo);
}

function gatepass_update($selected_id){
	global $Translation;

	// mm: can member edit record?
	$arrPerm=getTablePermissions('gatepass');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='gatepass' and pkValue='".makeSafe($selected_id)."'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='gatepass' and pkValue='".makeSafe($selected_id)."'");
	if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){ // allow update?
		// update allowed, so continue ...
	}else{
		return false;
	}

	$data['entry_time'] = makeSafe($_REQUEST['entry_time']);
		if($data['entry_time'] == empty_lookup_value){ $data['entry_time'] = ''; }
	$data['entry_time'] = time24($data['entry_time']);
	$data['exit_time'] = makeSafe($_REQUEST['exit_time']);
		if($data['exit_time'] == empty_lookup_value){ $data['exit_time'] = ''; }
	$data['exit_time'] = time24($data['exit_time']);
	$data['gate'] = makeSafe($_REQUEST['gate']);
		if($data['gate'] == empty_lookup_value){ $data['gate'] = ''; }
	if($data['gate']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'gate': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['purpose_of_visit'] = br2nl(makeSafe($_REQUEST['purpose_of_visit']));
	if($data['purpose_of_visit']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Purpose_Of_Visit': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['invited_by'] = makeSafe($_REQUEST['invited_by']);
		if($data['invited_by'] == empty_lookup_value){ $data['invited_by'] = ''; }
	$data['staff'] = makeSafe($_REQUEST['staff']);
		if($data['staff'] == empty_lookup_value){ $data['staff'] = ''; }
	$data['individual'] = makeSafe($_REQUEST['individual']);
		if($data['individual'] == empty_lookup_value){ $data['individual'] = ''; }
	$data['group'] = makeSafe($_REQUEST['group']);
		if($data['group'] == empty_lookup_value){ $data['group'] = ''; }
	$data['vehicle'] = makeSafe($_REQUEST['vehicle']);
		if($data['vehicle'] == empty_lookup_value){ $data['vehicle'] = ''; }
	$data['luggage'] = makeSafe($_REQUEST['luggage']);
		if($data['luggage'] == empty_lookup_value){ $data['luggage'] = ''; }
	$data['date'] = intval($_REQUEST['dateYear']) . '-' . intval($_REQUEST['dateMonth']) . '-' . intval($_REQUEST['dateDay']);
	$data['date'] = parseMySQLDate($data['date'], '1');
	$data['status'] = makeSafe($_REQUEST['status']);
		if($data['status'] == empty_lookup_value){ $data['status'] = ''; }
	$data['reason'] = br2nl(makeSafe($_REQUEST['reason']));
	$data['selectedID']=makeSafe($selected_id);

	// hook: gatepass_before_update
	if(function_exists('gatepass_before_update')){
		$args=array();
		if(!gatepass_before_update($data, getMemberInfo(), $args)){ return false; }
	}

	$o=array('silentErrors' => true);
	sql('update `gatepass` set       `entry_time`=' . (($data['entry_time'] !== '' && $data['entry_time'] !== NULL) ? "'{$data['entry_time']}'" : 'NULL') . ', `exit_time`=' . (($data['exit_time'] !== '' && $data['exit_time'] !== NULL) ? "'{$data['exit_time']}'" : 'NULL') . ', `gate`=' . (($data['gate'] !== '' && $data['gate'] !== NULL) ? "'{$data['gate']}'" : 'NULL') . ', `purpose_of_visit`=' . (($data['purpose_of_visit'] !== '' && $data['purpose_of_visit'] !== NULL) ? "'{$data['purpose_of_visit']}'" : 'NULL') . ', `invited_by`=' . (($data['invited_by'] !== '' && $data['invited_by'] !== NULL) ? "'{$data['invited_by']}'" : 'NULL') . ', `staff`=' . (($data['staff'] !== '' && $data['staff'] !== NULL) ? "'{$data['staff']}'" : 'NULL') . ', `individual`=' . (($data['individual'] !== '' && $data['individual'] !== NULL) ? "'{$data['individual']}'" : 'NULL') . ', `group`=' . (($data['group'] !== '' && $data['group'] !== NULL) ? "'{$data['group']}'" : 'NULL') . ', `vehicle`=' . (($data['vehicle'] !== '' && $data['vehicle'] !== NULL) ? "'{$data['vehicle']}'" : 'NULL') . ', `luggage`=' . (($data['luggage'] !== '' && $data['luggage'] !== NULL) ? "'{$data['luggage']}'" : 'NULL') . ', `date`=' . (($data['date'] !== '' && $data['date'] !== NULL) ? "'{$data['date']}'" : 'NULL') . ', `status`=' . (($data['status'] !== '' && $data['status'] !== NULL) ? "'{$data['status']}'" : 'NULL') . ', `reason`=' . (($data['reason'] !== '' && $data['reason'] !== NULL) ? "'{$data['reason']}'" : 'NULL') . " where `id`='".makeSafe($selected_id)."'", $o);
	if($o['error']!=''){
		echo $o['error'];
		echo '<a href="gatepass_view.php?SelectedID='.urlencode($selected_id)."\">{$Translation['< back']}</a>";
		exit;
	}


	// hook: gatepass_after_update
	if(function_exists('gatepass_after_update')){
		$res = sql("SELECT * FROM `gatepass` WHERE `id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = $data['id'];
		$args = array();
		if(!gatepass_after_update($data, getMemberInfo(), $args)){ return; }
	}

	// mm: update ownership data
	sql("update membership_userrecords set dateUpdated='".time()."' where tableName='gatepass' and pkValue='".makeSafe($selected_id)."'", $eo);

}

function gatepass_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0, $TemplateDV = '', $TemplateDVP = ''){
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm=getTablePermissions('gatepass');
	if(!$arrPerm[1] && $selected_id==''){ return ''; }
	$AllowInsert = ($arrPerm[1] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != ''){
		$dvprint = true;
	}

	$filterer_gate = thisOr(undo_magic_quotes($_REQUEST['filterer_gate']), '');
	$filterer_invited_by = thisOr(undo_magic_quotes($_REQUEST['filterer_invited_by']), '');
	$filterer_staff = thisOr(undo_magic_quotes($_REQUEST['filterer_staff']), '');
	$filterer_individual = thisOr(undo_magic_quotes($_REQUEST['filterer_individual']), '');
	$filterer_group = thisOr(undo_magic_quotes($_REQUEST['filterer_group']), '');
	$filterer_vehicle = thisOr(undo_magic_quotes($_REQUEST['filterer_vehicle']), '');
	$filterer_luggage = thisOr(undo_magic_quotes($_REQUEST['filterer_luggage']), '');

	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: gate
	$combo_gate = new DataCombo;
	// combobox: invited_by
	$combo_invited_by = new DataCombo;
	// combobox: staff
	$combo_staff = new DataCombo;
	// combobox: individual
	$combo_individual = new DataCombo;
	// combobox: group
	$combo_group = new DataCombo;
	// combobox: vehicle
	$combo_vehicle = new DataCombo;
	// combobox: luggage
	$combo_luggage = new DataCombo;
	// combobox: date
	$combo_date = new DateCombo;
	$combo_date->DateFormat = "dmy";
	$combo_date->MinYear = 1900;
	$combo_date->MaxYear = 2100;
	$combo_date->DefaultDate = parseMySQLDate('1', '1');
	$combo_date->MonthNames = $Translation['month names'];
	$combo_date->NamePrefix = 'date';
	// combobox: status
	$combo_status = new Combo;
	$combo_status->ListType = 2;
	$combo_status->MultipleSeparator = ', ';
	$combo_status->ListBoxHeight = 10;
	$combo_status->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/gatepass.status.csv')){
		$status_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/gatepass.status.csv')));
		$combo_status->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($status_data)));
		$combo_status->ListData = $combo_status->ListItem;
	}else{
		$combo_status->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("Approved;;Pending;;Rejected")));
		$combo_status->ListData = $combo_status->ListItem;
	}
	$combo_status->SelectName = 'status';

	if($selected_id){
		// mm: check member permissions
		if(!$arrPerm[2]){
			return "";
		}
		// mm: who is the owner?
		$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='gatepass' and pkValue='".makeSafe($selected_id)."'");
		$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='gatepass' and pkValue='".makeSafe($selected_id)."'");
		if($arrPerm[2]==1 && getLoggedMemberID()!=$ownerMemberID){
			return "";
		}
		if($arrPerm[2]==2 && getLoggedGroupID()!=$ownerGroupID){
			return "";
		}

		// can edit?
		if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){
			$AllowUpdate=1;
		}else{
			$AllowUpdate=0;
		}

		$res = sql("select * from `gatepass` where `id`='".makeSafe($selected_id)."'", $eo);
		if(!($row = db_fetch_array($res))){
			return error_message($Translation['No records found'], 'gatepass_view.php', false);
		}
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input();
		$row = $hc->xss_clean($row); /* sanitize data */
		$combo_gate->SelectedData = $row['gate'];
		$combo_invited_by->SelectedData = $row['invited_by'];
		$combo_staff->SelectedData = $row['staff'];
		$combo_individual->SelectedData = $row['individual'];
		$combo_group->SelectedData = $row['group'];
		$combo_vehicle->SelectedData = $row['vehicle'];
		$combo_luggage->SelectedData = $row['luggage'];
		$combo_date->DefaultDate = $row['date'];
		$combo_status->SelectedData = $row['status'];
	}else{
		$combo_gate->SelectedData = $filterer_gate;
		$combo_invited_by->SelectedData = $filterer_invited_by;
		$combo_staff->SelectedData = $filterer_staff;
		$combo_individual->SelectedData = $filterer_individual;
		$combo_group->SelectedData = $filterer_group;
		$combo_vehicle->SelectedData = $filterer_vehicle;
		$combo_luggage->SelectedData = $filterer_luggage;
		$combo_status->SelectedText = ( $_REQUEST['FilterField'][1]=='13' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "");
	}
	$combo_gate->HTML = '<span id="gate-container' . $rnd1 . '"></span><input type="hidden" name="gate" id="gate' . $rnd1 . '" value="' . html_attr($combo_gate->SelectedData) . '">';
	$combo_gate->MatchText = '<span id="gate-container-readonly' . $rnd1 . '"></span><input type="hidden" name="gate" id="gate' . $rnd1 . '" value="' . html_attr($combo_gate->SelectedData) . '">';
	$combo_invited_by->HTML = '<span id="invited_by-container' . $rnd1 . '"></span><input type="hidden" name="invited_by" id="invited_by' . $rnd1 . '" value="' . html_attr($combo_invited_by->SelectedData) . '">';
	$combo_invited_by->MatchText = '<span id="invited_by-container-readonly' . $rnd1 . '"></span><input type="hidden" name="invited_by" id="invited_by' . $rnd1 . '" value="' . html_attr($combo_invited_by->SelectedData) . '">';
	$combo_staff->HTML = '<span id="staff-container' . $rnd1 . '"></span><input type="hidden" name="staff" id="staff' . $rnd1 . '" value="' . html_attr($combo_staff->SelectedData) . '">';
	$combo_staff->MatchText = '<span id="staff-container-readonly' . $rnd1 . '"></span><input type="hidden" name="staff" id="staff' . $rnd1 . '" value="' . html_attr($combo_staff->SelectedData) . '">';
	$combo_individual->HTML = '<span id="individual-container' . $rnd1 . '"></span><input type="hidden" name="individual" id="individual' . $rnd1 . '" value="' . html_attr($combo_individual->SelectedData) . '">';
	$combo_individual->MatchText = '<span id="individual-container-readonly' . $rnd1 . '"></span><input type="hidden" name="individual" id="individual' . $rnd1 . '" value="' . html_attr($combo_individual->SelectedData) . '">';
	$combo_group->HTML = '<span id="group-container' . $rnd1 . '"></span><input type="hidden" name="group" id="group' . $rnd1 . '" value="' . html_attr($combo_group->SelectedData) . '">';
	$combo_group->MatchText = '<span id="group-container-readonly' . $rnd1 . '"></span><input type="hidden" name="group" id="group' . $rnd1 . '" value="' . html_attr($combo_group->SelectedData) . '">';
	$combo_vehicle->HTML = '<span id="vehicle-container' . $rnd1 . '"></span><input type="hidden" name="vehicle" id="vehicle' . $rnd1 . '" value="' . html_attr($combo_vehicle->SelectedData) . '">';
	$combo_vehicle->MatchText = '<span id="vehicle-container-readonly' . $rnd1 . '"></span><input type="hidden" name="vehicle" id="vehicle' . $rnd1 . '" value="' . html_attr($combo_vehicle->SelectedData) . '">';
	$combo_luggage->HTML = '<span id="luggage-container' . $rnd1 . '"></span><input type="hidden" name="luggage" id="luggage' . $rnd1 . '" value="' . html_attr($combo_luggage->SelectedData) . '">';
	$combo_luggage->MatchText = '<span id="luggage-container-readonly' . $rnd1 . '"></span><input type="hidden" name="luggage" id="luggage' . $rnd1 . '" value="' . html_attr($combo_luggage->SelectedData) . '">';
	$combo_status->Render();

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_gate__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['gate'] : $filterer_gate); ?>"};
		AppGini.current_invited_by__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['invited_by'] : $filterer_invited_by); ?>"};
		AppGini.current_staff__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['staff'] : $filterer_staff); ?>"};
		AppGini.current_individual__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['individual'] : $filterer_individual); ?>"};
		AppGini.current_group__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['group'] : $filterer_group); ?>"};
		AppGini.current_vehicle__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['vehicle'] : $filterer_vehicle); ?>"};
		AppGini.current_luggage__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['luggage'] : $filterer_luggage); ?>"};

		jQuery(function() {
			setTimeout(function(){
				if(typeof(gate_reload__RAND__) == 'function') gate_reload__RAND__();
				if(typeof(invited_by_reload__RAND__) == 'function') invited_by_reload__RAND__();
				if(typeof(staff_reload__RAND__) == 'function') staff_reload__RAND__();
				if(typeof(individual_reload__RAND__) == 'function') individual_reload__RAND__();
				if(typeof(group_reload__RAND__) == 'function') group_reload__RAND__();
				if(typeof(vehicle_reload__RAND__) == 'function') vehicle_reload__RAND__();
				if(typeof(luggage_reload__RAND__) == 'function') luggage_reload__RAND__();
			}, 10); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function gate_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#gate-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_gate__RAND__.value, t: 'gatepass', f: 'gate' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="gate"]').val(resp.results[0].id);
							$j('[id=gate-container-readonly__RAND__]').html('<span id="gate-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=gates_view_parent]').hide(); }else{ $j('.btn[id=gates_view_parent]').show(); }


							if(typeof(gate_update_autofills__RAND__) == 'function') gate_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ return { s: term, p: page, t: 'gatepass', f: 'gate' }; },
					results: function(resp, page){ return resp; }
				},
				escapeMarkup: function(str){ return str; }
			}).on('change', function(e){
				AppGini.current_gate__RAND__.value = e.added.id;
				AppGini.current_gate__RAND__.text = e.added.text;
				$j('[name="gate"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=gates_view_parent]').hide(); }else{ $j('.btn[id=gates_view_parent]').show(); }


				if(typeof(gate_update_autofills__RAND__) == 'function') gate_update_autofills__RAND__();
			});

			if(!$j("#gate-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_gate__RAND__.value, t: 'gatepass', f: 'gate' },
					success: function(resp){
						$j('[name="gate"]').val(resp.results[0].id);
						$j('[id=gate-container-readonly__RAND__]').html('<span id="gate-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=gates_view_parent]').hide(); }else{ $j('.btn[id=gates_view_parent]').show(); }

						if(typeof(gate_update_autofills__RAND__) == 'function') gate_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_gate__RAND__.value, t: 'gatepass', f: 'gate' },
				success: function(resp){
					$j('[id=gate-container__RAND__], [id=gate-container-readonly__RAND__]').html('<span id="gate-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=gates_view_parent]').hide(); }else{ $j('.btn[id=gates_view_parent]').show(); }

					if(typeof(gate_update_autofills__RAND__) == 'function') gate_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function invited_by_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#invited_by-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_invited_by__RAND__.value, t: 'gatepass', f: 'invited_by' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="invited_by"]').val(resp.results[0].id);
							$j('[id=invited_by-container-readonly__RAND__]').html('<span id="invited_by-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=staff_view_parent]').hide(); }else{ $j('.btn[id=staff_view_parent]').show(); }


							if(typeof(invited_by_update_autofills__RAND__) == 'function') invited_by_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ return { s: term, p: page, t: 'gatepass', f: 'invited_by' }; },
					results: function(resp, page){ return resp; }
				},
				escapeMarkup: function(str){ return str; }
			}).on('change', function(e){
				AppGini.current_invited_by__RAND__.value = e.added.id;
				AppGini.current_invited_by__RAND__.text = e.added.text;
				$j('[name="invited_by"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=staff_view_parent]').hide(); }else{ $j('.btn[id=staff_view_parent]').show(); }


				if(typeof(invited_by_update_autofills__RAND__) == 'function') invited_by_update_autofills__RAND__();
			});

			if(!$j("#invited_by-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_invited_by__RAND__.value, t: 'gatepass', f: 'invited_by' },
					success: function(resp){
						$j('[name="invited_by"]').val(resp.results[0].id);
						$j('[id=invited_by-container-readonly__RAND__]').html('<span id="invited_by-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=staff_view_parent]').hide(); }else{ $j('.btn[id=staff_view_parent]').show(); }

						if(typeof(invited_by_update_autofills__RAND__) == 'function') invited_by_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_invited_by__RAND__.value, t: 'gatepass', f: 'invited_by' },
				success: function(resp){
					$j('[id=invited_by-container__RAND__], [id=invited_by-container-readonly__RAND__]').html('<span id="invited_by-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=staff_view_parent]').hide(); }else{ $j('.btn[id=staff_view_parent]').show(); }

					if(typeof(invited_by_update_autofills__RAND__) == 'function') invited_by_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function staff_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#staff-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_staff__RAND__.value, t: 'gatepass', f: 'staff' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="staff"]').val(resp.results[0].id);
							$j('[id=staff-container-readonly__RAND__]').html('<span id="staff-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=staff_view_parent]').hide(); }else{ $j('.btn[id=staff_view_parent]').show(); }


							if(typeof(staff_update_autofills__RAND__) == 'function') staff_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ return { s: term, p: page, t: 'gatepass', f: 'staff' }; },
					results: function(resp, page){ return resp; }
				},
				escapeMarkup: function(str){ return str; }
			}).on('change', function(e){
				AppGini.current_staff__RAND__.value = e.added.id;
				AppGini.current_staff__RAND__.text = e.added.text;
				$j('[name="staff"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=staff_view_parent]').hide(); }else{ $j('.btn[id=staff_view_parent]').show(); }


				if(typeof(staff_update_autofills__RAND__) == 'function') staff_update_autofills__RAND__();
			});

			if(!$j("#staff-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_staff__RAND__.value, t: 'gatepass', f: 'staff' },
					success: function(resp){
						$j('[name="staff"]').val(resp.results[0].id);
						$j('[id=staff-container-readonly__RAND__]').html('<span id="staff-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=staff_view_parent]').hide(); }else{ $j('.btn[id=staff_view_parent]').show(); }

						if(typeof(staff_update_autofills__RAND__) == 'function') staff_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_staff__RAND__.value, t: 'gatepass', f: 'staff' },
				success: function(resp){
					$j('[id=staff-container__RAND__], [id=staff-container-readonly__RAND__]').html('<span id="staff-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=staff_view_parent]').hide(); }else{ $j('.btn[id=staff_view_parent]').show(); }

					if(typeof(staff_update_autofills__RAND__) == 'function') staff_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function individual_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#individual-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_individual__RAND__.value, t: 'gatepass', f: 'individual' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="individual"]').val(resp.results[0].id);
							$j('[id=individual-container-readonly__RAND__]').html('<span id="individual-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=individuals_view_parent]').hide(); }else{ $j('.btn[id=individuals_view_parent]').show(); }


							if(typeof(individual_update_autofills__RAND__) == 'function') individual_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ return { s: term, p: page, t: 'gatepass', f: 'individual' }; },
					results: function(resp, page){ return resp; }
				},
				escapeMarkup: function(str){ return str; }
			}).on('change', function(e){
				AppGini.current_individual__RAND__.value = e.added.id;
				AppGini.current_individual__RAND__.text = e.added.text;
				$j('[name="individual"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=individuals_view_parent]').hide(); }else{ $j('.btn[id=individuals_view_parent]').show(); }


				if(typeof(individual_update_autofills__RAND__) == 'function') individual_update_autofills__RAND__();
			});

			if(!$j("#individual-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_individual__RAND__.value, t: 'gatepass', f: 'individual' },
					success: function(resp){
						$j('[name="individual"]').val(resp.results[0].id);
						$j('[id=individual-container-readonly__RAND__]').html('<span id="individual-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=individuals_view_parent]').hide(); }else{ $j('.btn[id=individuals_view_parent]').show(); }

						if(typeof(individual_update_autofills__RAND__) == 'function') individual_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_individual__RAND__.value, t: 'gatepass', f: 'individual' },
				success: function(resp){
					$j('[id=individual-container__RAND__], [id=individual-container-readonly__RAND__]').html('<span id="individual-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=individuals_view_parent]').hide(); }else{ $j('.btn[id=individuals_view_parent]').show(); }

					if(typeof(individual_update_autofills__RAND__) == 'function') individual_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function group_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#group-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_group__RAND__.value, t: 'gatepass', f: 'group' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="group"]').val(resp.results[0].id);
							$j('[id=group-container-readonly__RAND__]').html('<span id="group-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=kikundi_view_parent]').hide(); }else{ $j('.btn[id=kikundi_view_parent]').show(); }


							if(typeof(group_update_autofills__RAND__) == 'function') group_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ return { s: term, p: page, t: 'gatepass', f: 'group' }; },
					results: function(resp, page){ return resp; }
				},
				escapeMarkup: function(str){ return str; }
			}).on('change', function(e){
				AppGini.current_group__RAND__.value = e.added.id;
				AppGini.current_group__RAND__.text = e.added.text;
				$j('[name="group"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=kikundi_view_parent]').hide(); }else{ $j('.btn[id=kikundi_view_parent]').show(); }


				if(typeof(group_update_autofills__RAND__) == 'function') group_update_autofills__RAND__();
			});

			if(!$j("#group-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_group__RAND__.value, t: 'gatepass', f: 'group' },
					success: function(resp){
						$j('[name="group"]').val(resp.results[0].id);
						$j('[id=group-container-readonly__RAND__]').html('<span id="group-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=kikundi_view_parent]').hide(); }else{ $j('.btn[id=kikundi_view_parent]').show(); }

						if(typeof(group_update_autofills__RAND__) == 'function') group_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_group__RAND__.value, t: 'gatepass', f: 'group' },
				success: function(resp){
					$j('[id=group-container__RAND__], [id=group-container-readonly__RAND__]').html('<span id="group-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=kikundi_view_parent]').hide(); }else{ $j('.btn[id=kikundi_view_parent]').show(); }

					if(typeof(group_update_autofills__RAND__) == 'function') group_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function vehicle_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#vehicle-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_vehicle__RAND__.value, t: 'gatepass', f: 'vehicle' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="vehicle"]').val(resp.results[0].id);
							$j('[id=vehicle-container-readonly__RAND__]').html('<span id="vehicle-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=vehicles_view_parent]').hide(); }else{ $j('.btn[id=vehicles_view_parent]').show(); }


							if(typeof(vehicle_update_autofills__RAND__) == 'function') vehicle_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ return { s: term, p: page, t: 'gatepass', f: 'vehicle' }; },
					results: function(resp, page){ return resp; }
				},
				escapeMarkup: function(str){ return str; }
			}).on('change', function(e){
				AppGini.current_vehicle__RAND__.value = e.added.id;
				AppGini.current_vehicle__RAND__.text = e.added.text;
				$j('[name="vehicle"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=vehicles_view_parent]').hide(); }else{ $j('.btn[id=vehicles_view_parent]').show(); }


				if(typeof(vehicle_update_autofills__RAND__) == 'function') vehicle_update_autofills__RAND__();
			});

			if(!$j("#vehicle-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_vehicle__RAND__.value, t: 'gatepass', f: 'vehicle' },
					success: function(resp){
						$j('[name="vehicle"]').val(resp.results[0].id);
						$j('[id=vehicle-container-readonly__RAND__]').html('<span id="vehicle-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=vehicles_view_parent]').hide(); }else{ $j('.btn[id=vehicles_view_parent]').show(); }

						if(typeof(vehicle_update_autofills__RAND__) == 'function') vehicle_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_vehicle__RAND__.value, t: 'gatepass', f: 'vehicle' },
				success: function(resp){
					$j('[id=vehicle-container__RAND__], [id=vehicle-container-readonly__RAND__]').html('<span id="vehicle-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=vehicles_view_parent]').hide(); }else{ $j('.btn[id=vehicles_view_parent]').show(); }

					if(typeof(vehicle_update_autofills__RAND__) == 'function') vehicle_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function luggage_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#luggage-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_luggage__RAND__.value, t: 'gatepass', f: 'luggage' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="luggage"]').val(resp.results[0].id);
							$j('[id=luggage-container-readonly__RAND__]').html('<span id="luggage-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=luggage_view_parent]').hide(); }else{ $j('.btn[id=luggage_view_parent]').show(); }


							if(typeof(luggage_update_autofills__RAND__) == 'function') luggage_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ return { s: term, p: page, t: 'gatepass', f: 'luggage' }; },
					results: function(resp, page){ return resp; }
				},
				escapeMarkup: function(str){ return str; }
			}).on('change', function(e){
				AppGini.current_luggage__RAND__.value = e.added.id;
				AppGini.current_luggage__RAND__.text = e.added.text;
				$j('[name="luggage"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=luggage_view_parent]').hide(); }else{ $j('.btn[id=luggage_view_parent]').show(); }


				if(typeof(luggage_update_autofills__RAND__) == 'function') luggage_update_autofills__RAND__();
			});

			if(!$j("#luggage-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_luggage__RAND__.value, t: 'gatepass', f: 'luggage' },
					success: function(resp){
						$j('[name="luggage"]').val(resp.results[0].id);
						$j('[id=luggage-container-readonly__RAND__]').html('<span id="luggage-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=luggage_view_parent]').hide(); }else{ $j('.btn[id=luggage_view_parent]').show(); }

						if(typeof(luggage_update_autofills__RAND__) == 'function') luggage_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_luggage__RAND__.value, t: 'gatepass', f: 'luggage' },
				success: function(resp){
					$j('[id=luggage-container__RAND__], [id=luggage-container-readonly__RAND__]').html('<span id="luggage-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=luggage_view_parent]').hide(); }else{ $j('.btn[id=luggage_view_parent]').show(); }

					if(typeof(luggage_update_autofills__RAND__) == 'function') luggage_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_contents());
	ob_end_clean();


	// code for template based detail view forms

	// open the detail view template
	if($dvprint){
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/gatepass_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	}else{
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/gatepass_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Detail View', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert){
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return gatepass_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return gatepass_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']){
		$backAction = 'AppGini.closeParentModal(); return false;';
	}else{
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id){
		if(!$_REQUEST['Embedded']) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$$(\'form\')[0].writeAttribute(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate){
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return gatepass_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)){
		$jsReadOnly .= "\tjQuery('#entry_time').replaceWith('<div class=\"form-control-static\" id=\"entry_time\">' + (jQuery('#entry_time').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#exit_time').replaceWith('<div class=\"form-control-static\" id=\"exit_time\">' + (jQuery('#exit_time').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#gate').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#gate_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#purpose_of_visit').replaceWith('<div class=\"form-control-static\" id=\"purpose_of_visit\">' + (jQuery('#purpose_of_visit').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#invited_by').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#invited_by_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#staff').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#staff_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#individual').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#individual_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#group').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#group_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#vehicle').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#vehicle_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#luggage').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#luggage_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#date').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#dateDay, #dateMonth, #dateYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('input[name=status]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=status]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('#reason').replaceWith('<div class=\"form-control-static\" id=\"reason\">' + (jQuery('#reason').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	}elseif($AllowInsert){
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
		$jsEditable .= "\tjQuery('#entry_time').addClass('always_shown').timepicker({ defaultTime: false, showSeconds: true, showMeridian: true, showInputs: false, disableFocus: true, minuteStep: 5 });";
		$jsEditable .= "\tjQuery('#exit_time').addClass('always_shown').timepicker({ defaultTime: false, showSeconds: true, showMeridian: true, showInputs: false, disableFocus: true, minuteStep: 5 });";
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(gate)%%>', $combo_gate->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(gate)%%>', $combo_gate->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(gate)%%>', urlencode($combo_gate->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(invited_by)%%>', $combo_invited_by->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(invited_by)%%>', $combo_invited_by->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(invited_by)%%>', urlencode($combo_invited_by->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(staff)%%>', $combo_staff->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(staff)%%>', $combo_staff->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(staff)%%>', urlencode($combo_staff->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(individual)%%>', $combo_individual->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(individual)%%>', $combo_individual->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(individual)%%>', urlencode($combo_individual->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(group)%%>', $combo_group->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(group)%%>', $combo_group->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(group)%%>', urlencode($combo_group->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(vehicle)%%>', $combo_vehicle->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(vehicle)%%>', $combo_vehicle->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(vehicle)%%>', urlencode($combo_vehicle->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(luggage)%%>', $combo_luggage->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(luggage)%%>', $combo_luggage->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(luggage)%%>', urlencode($combo_luggage->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(date)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_date->GetHTML(true) . '</div>' : $combo_date->GetHTML()), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(date)%%>', $combo_date->GetHTML(true), $templateCode);
	$templateCode = str_replace('<%%COMBO(status)%%>', $combo_status->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(status)%%>', $combo_status->SelectedData, $templateCode);

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array(  'gate' => array('gates', 'gate'), 'invited_by' => array('staff', 'InvitedBy'), 'staff' => array('staff', 'Staff'), 'individual' => array('individuals', 'Individual'), 'group' => array('kikundi', 'Group'), 'vehicle' => array('vehicles', 'Vehicle'), 'luggage' => array('luggage', 'Luggage'));
	foreach($lookup_fields as $luf => $ptfc){
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']){
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-md" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] && !$_REQUEST['Embedded']){
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent hspacer-md" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(entry_time)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(exit_time)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(gate)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(purpose_of_visit)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(invited_by)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(staff)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(individual)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(group)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(vehicle)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(luggage)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(date)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(status)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(reason)%%>', '', $templateCode);

	// process values
	if($selected_id){
		if( $dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', safe_html($urow['id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', html_attr($row['id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode($urow['id']), $templateCode);
		$templateCode = str_replace('<%%VALUE(entry_time)%%>', time12(html_attr($row['entry_time'])), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(entry_time)%%>', urlencode(time12($urow['entry_time'])), $templateCode);
		$templateCode = str_replace('<%%VALUE(exit_time)%%>', time12(html_attr($row['exit_time'])), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(exit_time)%%>', urlencode(time12($urow['exit_time'])), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(gate)%%>', safe_html($urow['gate']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(gate)%%>', html_attr($row['gate']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(gate)%%>', urlencode($urow['gate']), $templateCode);
		if($dvprint || (!$AllowUpdate && !$AllowInsert)){
			$templateCode = str_replace('<%%VALUE(purpose_of_visit)%%>', safe_html($urow['purpose_of_visit']), $templateCode);
		}else{
			$templateCode = str_replace('<%%VALUE(purpose_of_visit)%%>', html_attr($row['purpose_of_visit']), $templateCode);
		}
		$templateCode = str_replace('<%%URLVALUE(purpose_of_visit)%%>', urlencode($urow['purpose_of_visit']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(invited_by)%%>', safe_html($urow['invited_by']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(invited_by)%%>', html_attr($row['invited_by']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(invited_by)%%>', urlencode($urow['invited_by']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(staff)%%>', safe_html($urow['staff']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(staff)%%>', html_attr($row['staff']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(staff)%%>', urlencode($urow['staff']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(individual)%%>', safe_html($urow['individual']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(individual)%%>', html_attr($row['individual']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(individual)%%>', urlencode($urow['individual']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(group)%%>', safe_html($urow['group']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(group)%%>', html_attr($row['group']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(group)%%>', urlencode($urow['group']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(vehicle)%%>', safe_html($urow['vehicle']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(vehicle)%%>', html_attr($row['vehicle']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle)%%>', urlencode($urow['vehicle']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(luggage)%%>', safe_html($urow['luggage']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(luggage)%%>', html_attr($row['luggage']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(luggage)%%>', urlencode($urow['luggage']), $templateCode);
		$templateCode = str_replace('<%%VALUE(date)%%>', @date('d/m/Y', @strtotime(html_attr($row['date']))), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date)%%>', urlencode(@date('d/m/Y', @strtotime(html_attr($urow['date'])))), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(status)%%>', safe_html($urow['status']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(status)%%>', html_attr($row['status']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(status)%%>', urlencode($urow['status']), $templateCode);
		if($dvprint || (!$AllowUpdate && !$AllowInsert)){
			$templateCode = str_replace('<%%VALUE(reason)%%>', safe_html($urow['reason']), $templateCode);
		}else{
			$templateCode = str_replace('<%%VALUE(reason)%%>', html_attr($row['reason']), $templateCode);
		}
		$templateCode = str_replace('<%%URLVALUE(reason)%%>', urlencode($urow['reason']), $templateCode);
	}else{
		$templateCode = str_replace('<%%VALUE(id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(entry_time)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(entry_time)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(exit_time)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(exit_time)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(gate)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(gate)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(purpose_of_visit)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(purpose_of_visit)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(invited_by)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(invited_by)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(staff)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(staff)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(individual)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(individual)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(group)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(group)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(vehicle)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(luggage)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(luggage)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(date)%%>', '1', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date)%%>', urlencode('1'), $templateCode);
		$templateCode = str_replace('<%%VALUE(status)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(status)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(reason)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(reason)%%>', urlencode(''), $templateCode);
	}

	// process translations
	foreach($Translation as $symbol=>$trans){
		$templateCode = str_replace("<%%TRANSLATION($symbol)%%>", $trans, $templateCode);
	}

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == ''){
		$templateCode .= "\n\n<script>\$j(function(){\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption){
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id){
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('gatepass');
	if($selected_id){
		$jdata = get_joined_record('gatepass', $selected_id);
		if($jdata === false) $jdata = get_defaults('gatepass');
		$rdata = $row;
	}
	$cache_data = array(
		'rdata' => array_map('nl2br', array_map('addslashes', $rdata)),
		'jdata' => array_map('nl2br', array_map('addslashes', $jdata))
	);
	$templateCode .= loadView('gatepass-ajax-cache', $cache_data);

	// hook: gatepass_dv
	if(function_exists('gatepass_dv')){
		$args=array();
		gatepass_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}
?>